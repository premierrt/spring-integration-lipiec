<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:int="http://www.springframework.org/schema/integration"
    	xmlns:task="http://www.springframework.org/schema/task"
    
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
        		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
        
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
 
    <int:channel id="inputChannel"/>
    
    <int:channel id="outputChannel">
        <int:queue capacity="10"/>
    </int:channel>
 
 
   
     <!-- implementacja serwisu dla serviceActivator -->
    <bean id="greetingService" class="com.javarticles.spring.integration.serviceactivator.GreetingImpl"/>
     
	<!-- service activator pooluje z inputchannela do ktorego strzela gateway.  -->
	<int:service-activator id="sayHello" input-channel="inputChannel" ref="greetingService" method="sayHello"></int:service-activator>
    
    
    <!-- drugi service activator do obslugi kanału dla metody sayHelloNoReturn. service activator pooluje z inputchannela do ktorego strzela gateway.  -->
     <!--   	<int:service-activator id="sayHelloNoReturn" input-channel="inputChannel" ref="greetingService" method="sayHelloNoReturn"></int:service-activator>
     -->
    
    <!-- gateway wie tylko ze strzela do input channela, a nie do konkretnego service activatora -->
   <!-- 
   
    <int:gateway id="greetingGateway"
    	service-interface="com.javarticles.spring.integration.GreetingGateway"
    	default-request-channel="inputChannel"
    />
     -->
    
    
    <!-- wersja asynchroniczna -->
    
    <!-- jeśli rozmiar kolejki jest wystarczajacy, to wszytkie wywolania trafiaja do kolejki, to program glowny sie konczy,
    	a przetwarzanie dziesje w w osobnych watkach. Jeśli nie, to program głowny zachowuje konczy sie dopiero jak uda sie wypchnac 
    	wszystko do kolejki, czyli jak executor pobierze odpowiednia ilosc zadan z kolejki i program glowny wypchnie reszte do kolejki.
    	czyli program glowny wisi na wywolaniu gatwaya
     -->
     <int:channel id="asyncInputChannel">
 		<int:queue capacity="2"/>
    </int:channel>
   
    <task:executor id='executor' pool-size='1'  />
   
     <!-- drugi service activator do obslugi kanału dla metody asynchronicznie sayHelloNoReturn. service activator pooluje z inputchannela do ktorego strzela gateway.  -->
	<int:service-activator id="sayHelloNoReturnAsync" input-channel="asyncInputChannel" ref="greetingService" method="sayHelloNoReturn">
		<int:poller task-executor="executor" fixed-delay="50"/>
	
	</int:service-activator>
    
    
    <int:gateway id="greetingGateway"
    	service-interface="com.javarticles.spring.integration.GreetingGateway"
    	default-request-channel="asyncInputChannel"
    />
   
    
    
</beans>