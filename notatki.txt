to do:

+ok--dodac publish subsribe
https://www.javacodegeeks.com/2012/07/spring-integration-session-2-more-hello.html

+ok--dodac junit
https://www.javacodegeeks.com/2012/07/spring-integration-session-2-more-hello.html

-jak dzial executor i pulowanie w publis subsribe

--tag dla wersji synchro zrobic
--Adapter File 
https://www.intertech.com/Blog/spring-integration-tutorial-part-2-adapters/


http://www.javarticles.com/2015/05/spring-integration-hello-world-example.html

https://springframework.guru/hello-world-using-spring-integration/

--dodac kolejka asynchroniczna
https://www.javacodegeeks.com/2015/09/spring-integration-fundamentals.html

https://examples.javacodegeeks.com/enterprise-java/spring/spring-integration-poller-example/


--dodac excutora
--dodac webservice klient int-ws:outbound-gateway
https://www.javacodegeeks.com/2015/09/spring-integration-and-web-services.html




///konfiguracja kolejki
1. 
jesli pojemosc kolejki jest wystarczajaco duzo, to progam glwony nie blokuje sie na wywolaniu gatwaya:
	<int:queue capacity="5"/>
wszystko trafia do bufora kolejki i program sie konczy. watki tylko pracuja w service activator.

INFO: started sayHelloNoReturnAsync
Test metody ktora nic nie zwraca
***Koniec programu glownego. Test metody ktora nic nie zwraca
to jest wywolanie numer: 0start service...
to jest wywolanie numer: 0   Koniec Service  nic nie zwroci zakonczyl sie ...
to jest wywolanie numer: 1start service...
to jest wywolanie numer: 1   Koniec Service  nic nie zwroci zakonczyl sie ...
to jest wywolanie numer: 2start service...
to jest wywolanie numer: 2   Koniec Service  nic nie zwroci zakonczyl sie ...
to jest wywolanie numer: 3start service...
to jest wywolanie numer: 3   Koniec Service  nic nie zwroci zakonczyl sie ...
to jest wywolanie numer: 4start service...
to jest wywolanie numer: 4   Koniec Service  nic nie zwroci zakonczyl sie ...

2.
jesli rozmiar kolejki jest za maly, to program glowny zakonczy sie gdy wszystko zostanie wypchniete do kolejki. 
czyli czeka na wywolaniu gatwaya.
przyklad
 		<int:queue capacity="2"/>

lip 24, 2017 3:48:08 PM org.springframework.integration.endpoint.PollingConsumer start
INFO: started sayHelloNoReturnAsync
Test metody ktora nic nie zwraca
to jest wywolanie numer: 0start service...
to jest wywolanie numer: 0   Koniec Service  nic nie zwroci zakonczyl sie ...
to jest wywolanie numer: 1start service...
to jest wywolanie numer: 1   Koniec Service  nic nie zwroci zakonczyl sie ...
*****Koniec programu glownego. Test metody ktora nic nie zwraca
to jest wywolanie numer: 2start service...
to jest wywolanie numer: 2   Koniec Service  nic nie zwroci zakonczyl sie ...
to jest wywolanie numer: 3start service...
to jest wywolanie numer: 3   Koniec Service  nic nie zwroci zakonczyl sie ...
to jest wywolanie numer: 4start service...
to jest wywolanie numer: 4   Koniec Service  nic nie zwroci zakonczyl sie ...


3. publish subsriber po dodanie executora nie blokuje procesu. wysyla i nie czeka na odpowiedz.
W przypadku junit po uruchomieniu 10x wyslania przez gateway metoda sie konczy i junit niszczy wszystko, lacznie z watkami ktore œpi przez 3 sek w service activator.
public void testSendGreeting(){
		for (int i=0; i< 10; i++){ 
			greetingGateway.sendGreeting("to jest testowy tekst");
		}
		System.out.println("koniec testow");
	}


sie 07, 2017 5:09:45 PM org.springframework.integration.endpoint.PollingConsumer start
INFO: started sayHelloNoReturnAsync
koniec testow
to jest testowy tekststart service activator...
to jest testowy tekststart service activator...
to jest testowy tekststart service activator...
to jest testowy tekststart service activator...
sie 07, 2017 5:09:45 PM org.springframework.context.support.GenericApplicationContext doClose
INFO: Closing org.springframework.context.support.GenericApplicationContext@380fb434: startup date [Mon Aug 07 17:09:44 CEST 2017]; root of context hierarchy
sie 07, 2017 5:09:45 PM org.springframework.context.support.DefaultLifecycleProcessor stop
INFO: Stopping beans in phase 1073741823
java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method)
	at com.javarticles.spring.integration.servicea


<beans xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:int-ws="http://www.springframework.org/schema/integration/ws"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                  http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
                  http://www.springframework.org/schema/integration/ws http://www.springframework.org/schema/integration/ws/spring-integration-ws.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">


  <alias name="asynchronousMsisdnGateway" alias="asynchMsisdnGateway"/>
  <int:gateway id="asynchronousMsisdnGateway" service-interface="pl.play.services.msisdn.AsynchronousMsisdnGateway" error-channel="msisdnAsynchErrorChannel">
    <int:method name="getDefaultMsisdn" request-channel="getAsynchFreeMsisdnsRequestChannel" reply-channel="getAsynchFreeMsisdnsResponseChannel" />
  </int:gateway>

  <int:publish-subscribe-channel id="msisdnAsynchErrorChannel" />
  <int:publish-subscribe-channel id="getAsynchFreeMsisdnsRequestChannel" task-executor="executor"/>
  <int:publish-subscribe-channel id="getAsynchFreeMsisdnsResponseChannel"/>

  <int:transformer ref="transformer" method="transform" input-channel="getAsynchFreeMsisdnsRequestChannel" output-channel="getAsynchFreeMsisdnsResponseChannel"/>

  <task:executor id="executor" pool-size="10"/>

  <task:executor id="errorTaskExecutor" pool-size="10"/>

  <int:service-activator input-channel="msisdnAsynchErrorChannel" ref="msisdnAsynchErrorHandler"/>

  <bean name="msisdnAsynchErrorHandler" class="pl.play.integration.msisdn.MsisdnErrorHandler"/>

  <bean id="transformer" class="pl.play.services.msisdn.impl.AsynchMsisdnTransform">
    <property name="msisdnGateway" ref="msisdnGateway" />
  </bean>
</beans>